services:
  bob_dag_scheduler:
    image: crpi-84gohwg2zpoyckdg.cn-hangzhou.personal.cr.aliyuncs.com/beng003_docker/dagscheduler-backend:latest # 这里指定构建的镜像名称
    container_name: bob_dag_scheduler
    # ports:
    #   - "8088:9099"
    networks:
      - network_beng003
    environment:
      - APP_ENV=bob
    depends_on:
      bob_mysql:
        condition: service_healthy
      bob_redis:
        condition: service_healthy
      bob_operator:
        condition: service_started

  bob_operator:
    image: crpi-84gohwg2zpoyckdg.cn-hangzhou.personal.cr.aliyuncs.com/beng003_docker/operator:latest # 这里指定构建的镜像名称
    container_name: bob_operator
    # volumes:
    #   - ../../:/app # 宿主机路径:容器路径
    shm_size: 1gb
    networks:
      - network_beng003
    environment:
      - APP_ENV=dep
    
  bob_mysql:
    image: mysql:8.0
    restart: always
    container_name: bob_mysql
    networks:
      - network_beng003
    # ports:
    #   - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=12341234
      - MYSQL_DATABASE=DAGScheduler
      # - TZ=Asia/Shanghai
    volumes:
      - bob_mysql_data:/var/lib/mysql
      # - ../sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p12341234"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s  # 给MySQL启动的缓冲时间

  bob_redis:
    image: redis:latest
    container_name: bob_redis
    networks:
      - network_beng003
    # ports:
    #   - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  bob_mysql_data:

networks:
  network_beng003:
    driver: bridge